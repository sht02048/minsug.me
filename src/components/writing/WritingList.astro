---
import type { CollectionEntry } from "astro:content";
import PostLink from "../PostLink.astro";

type Props = {
  writings: CollectionEntry<"writings">[];
};
type writingListInfo = {
  title: string;
  month: string;
  day: string;
  slug: string;
  description: string;
};

const { writings } = Astro.props;

writings.sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

const writingsByYear = Object.entries(
  writings.reduce((acc: Record<number, writingListInfo[]>, cur) => {
    const year = cur.data.date.getFullYear();
    const month = String(cur.data.date.getMonth()).padStart(2, "0");
    const day = String(cur.data.date.getDate()).padStart(2, "0");
    const title = cur.data.title;
    const slug = cur.id.split("/").pop() as string;
    const description = cur.data.description as string;

    if (acc[year]) {
      acc[year].push({ title, month, day, slug, description });
    } else {
      acc[year] = [{ title, month, day, slug, description }];
    }

    return acc;
  }, {}),
);
---

<div class="flex flex-col gap-7 sm:gap-4">
  {
    writingsByYear.map(([year, writings]) =>
      writings.map((writing, index) => {
        return (
          <div class="flex w-full items-start">
            <div class="basis-1/5 sm:py-3 hidden sm:block">
              {index === 0 && <span>{year}</span>}
            </div>
            <div class="basis-4/5">
              <PostLink
                link={writing.slug}
                title={writing.title}
                description={writing.description}
              />
            </div>
          </div>
        );
      }),
    )
  }
</div>
